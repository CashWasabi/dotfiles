if &compatible
	set nocompatible
endif

" enable slime for ipython
let g:slime_python_ipython = 1

" let configs
let g:deoplete#enable_at_startup=1

" simplyfold docstring preview
let g:SimpylFold_docstring_preview=1

" color schemes
let g:gruvbox_italic=1

let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

let mapleader = ","

" make python code look pretty
let python_highlight_all=1

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

" Syntastic setting start
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_aggregate_errors = 0
let g:syntastic_python_flake8_args = "--max-line-length=88 --max-complexity=10"  
let g:syntastic_python_checkers = ['mypy', 'flake8']

" with omnisharp plugin
let g:syntastic_cs_checkers = ['code_checker']
let g:syntastic_clojure_checkers = ['eastwood']
" Syntastic settings end

" use ctrlp with omnisharp
let g:OmniSharp_selector_ui = 'ctrlp'  " Use ctrlp.vim

" vim-slime setting start
let g:slime_target = "tmux"
let g:slime_paste_file = "$HOME/.slime_paste"
" vim-slime setting end

" python motions overwriting vim8 basic motions
let g:is_pythonsense_suppress_motion_keymaps = 1

" airline settings start

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline_powerline_fonts = 1
" also see instructions to enable this one because its not available
" the normal way (lookup dein installation below)
let g:airline_theme='gruvbox'
" airline settings end

"Activation rainbow_parentheses based on file type
augroup rainbow_lisp
  autocmd!
  autocmd FileType lisp,clojure,scheme RainbowParentheses
augroup END

" Add the dein installation directory into runtimepath

set runtimepath +=~/.vim/bundles/repos/github.com/Shougo/dein.vim

if dein#load_state('~/.vim/bundles')
	call dein#begin('~/.vim/bundles')

	" mandatory plugins
	call dein#add('~/.vim/bundles/repos/github.com/Shougo/dein.vim')
	
	" dependencies for deoplete if in vim8
	" There is an issue with the dependencies which is resolved here:
	" https://github.com/roxma/vim-hug-neovim-rpc/issues/28
	" current fix: install python-greenlet with pacman and install neovim
	" in system python
	call dein#add('roxma/nvim-yarp')
	call dein#add('roxma/vim-hug-neovim-rpc')
	
	" autocompletion (better than YouCompleteMe)
	call dein#add('Shougo/deoplete.nvim')
	
	" enable jedi-vim features for deoplete
	call dein#add('zchee/deoplete-jedi')

	" linter
	call dein#add('vim-syntastic/syntastic')

	" file browsing
	call dein#add('scrooloose/nerdtree')
	call dein#add('jistr/vim-nerdtree-tabs')
	call dein#add('Xuyuanp/nerdtree-git-plugin')	

	" git integration
	call dein#add('rickhowe/diffchar.vim')
	call dein#add('tpope/vim-fugitive')
	call dein#add('airblade/vim-gitgutter')
	
	" code folding
	call dein#add('tmhedberg/SimpylFold')
	
	" comment out stuff
	call dein#add('scrooloose/nerdcommenter')
	
	" searching for everything
	call dein#add('kien/ctrlp.vim')
	
	" support for navigation between tmux windows and vim windows
	call dein#add('christoomey/vim-tmux-navigator')

	" send text to repls like clojure or python
	call dein#add('jpalardy/vim-slime')

	" json helper for vim
	call dein#add('elzr/vim-json')
	
	" sonic pi interface
	call dein#add('dermusikman/sonicpi.vim')
	
	" glsl preview
	call dein#add('patriciogonzalezvivo/vim-glslViewer')
	
	" snippets
	call dein#add('SirVer/ultisnips')	
	call dein#add('honza/vim-snippets')

	" wiki hosted from vim	
	call dein#add('vimwiki/vimwiki')

	" Colors
	call dein#add('rakr/vim-togglebg') " plugin to change color on key call
	call dein#add('morhetz/gruvbox')

	" status bar
	" to setup gruvbox theme follow these instructions:
	" mkdir --parents ~/.vim/colors
	" ln -s ~/.vim/bundles/repos/github.com/morhetz/gruvbox/colors ~/.vim/colors/gruvbox.vim
	call dein#add('vim-airline/vim-airline')
	call dein#add('vim-airline/vim-airline-themes')
	
	" Grammar checker call 
	call dein#add('rhysd/vim-grammarous')

	" test dispatcher
	call dein#add('tpope/vim-dispatch')
	
	" costum stuff
	call dein#add('jiangmiao/auto-pairs')
	call dein#add('easymotion/vim-easymotion')
	call dein#add('tpope/vim-surround')	
	call dein#add('simeji/winresizer')
   	
	"""" LANGUAGE SPECIFIC PLUGINS

	" C#
	" TODO: https://www.reddit.com/r/vim/comments/4ze13q/does_anyone_use_vim_with_unity/
	" shows a way to integrate omnisharp with deoplete
	call dein#add('OmniSharp/omnisharp-vim')

	" CLOJURE
	call dein#add('tpope/vim-classpath')
	call dein#add('tpope/vim-fireplace')
	call dein#add('tpope/vim-salve')
	call dein#add('junegunn/rainbow_parentheses.vim')
	call dein#add('guns/vim-sexp')
	call dein#add('tpope/vim-sexp-mappings-for-regular-people')
	call dein#add('venantius/vim-eastwood')
	call dein#add('venantius/vim-cljfmt')
     
	"" PYTHON
	call dein#add('plytophogy/vim-virtualenv')
	call dein#add('PieterjanMontens/vim-pipenv')
	call dein#add('ambv/black')
	" python motions for better navigation
	call dein#add('jeetsukumaran/vim-pythonsense')
	"html/markdown
	call dein#add('mattn/emmet-vim')
	call dein#add('jtratner/vim-flavored-markdown')
	call dein#add('suan/vim-instant-markdown')
	call dein#add('nelstrom/vim-markdown-preview')	


	" end custom plugins

	call dein#end()
	call dein#save_state()
endif

filetype plugin indent on
syntax enable
syntax on

" If you want to install not installed plugins on startup.
if dein#check_install()
  call dein#install()
endif
 
" set encoding to utf-8
set encoding=utf-8
 
" enable line numbering
set nu

" fix delete bug
set backspace=indent,eol,start
 
" that airlines statusbar is automatically called
set laststatus=2
 
" enable copy paste
set clipboard=unnamedplus

" powerline settings
set laststatus=2 " Always display the statusline in all windows
set showtabline=2 " Always display the tabline, even if there is only one tab
"set noshowmode " Hide the default mode text (e.g. -- INSERT -- below the statusline)
 
" file specific tabs and spaces for python pep8
autocmd Filetype python setlocal expandtab autoindent tabstop=4 shiftwidth=4 softtabstop=4 textwidth=87 colorcolumn=88 fileformat=unix 

" special cases where two tabstops are recommended
autocmd Filetype javascript setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype typescript setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype json setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype jsx setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
 
" enable red color with whitespaces
autocmd ColorScheme * highlight BadWhitespace ctermbg=red guibg=red

" starts vim+nerdtree when there is no file given
autocmd VimEnter * if !argc() | NERDTree | endif

" close nerdtree if there is only the file manager open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

colorscheme gruvbox
set t_Co=256
set bg=dark
call togglebg#map("<F5>")

"split navigations
" is this still useful with nerdtree?
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" open nerdtree on toggle
nnoremap <C-n> :NERDTreeToggle<CR>

" switch between buffers with tab and shift-tab
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>
" list buffers
nnoremap <leader>bb :buffers<Enter>

" Close buffer but keep split
nnoremap <Backspace> :bp\|bd \#<Enter>

" Close split but keep buffer
nnoremap <leader><Backspace> <C-w>q<Enter>

"" execute black on filesave
autocmd BufWritePre *.py execute ':Black'

" copy with yank command in visual mode
nnoremap <C-c> "+y
